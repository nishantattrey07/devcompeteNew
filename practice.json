[{"model": "pratice.question", "pk": 1, "fields": {"question_name": "Fibonacci", "question_text": "Given a number N, find the first N Fibonacci numbers.\r\n\r\nThe first two number of the series are 1 and 1.", "pub_date": "2024-01-11T04:59:18Z", "score": 10, "difficulty": "easy"}}, {"model": "pratice.question", "pk": 4, "fields": {"question_name": "Max Min", "question_text": "<p>You are given a stack data structure implemented using a list in Python. Write a function find_max_element(stack) that finds the maximum element in the stack without using any built-in functions such as max(), sort(), or sorted().<br />\r\n&nbsp;</p>", "pub_date": "2024-01-27T04:57:18Z", "score": 1, "difficulty": "medium"}}, {"model": "pratice.question", "pk": 5, "fields": {"question_name": "n pairs of parentheses", "question_text": "<p><span style=\"color:#000000\">Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"color:#000000\">Example 1:</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"color:#000000\">Input: n = 3</span></p>\r\n\r\n<p><span style=\"color:#000000\">Output: [&quot;((()))&quot;,&quot;(()())&quot;,&quot;(())()&quot;,&quot;()(())&quot;,&quot;()()()&quot;]</span></p>\r\n\r\n<p><span style=\"color:#000000\">Example 2:</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"color:#000000\">Input: n = 1</span></p>\r\n\r\n<p><span style=\"color:#000000\">Output: [&quot;()&quot;]</span></p>\r\n\r\n<p><span style=\"color:#000000\">&nbsp;</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"color:#000000\">Constraints:</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"color:#000000\">1 &lt;= n &lt;= 8</span></p>\r\n\r\n<p><br />\r\n&nbsp;</p>", "pub_date": "2024-01-27T06:14:46Z", "score": 5, "difficulty": "medium"}}, {"model": "pratice.testcase", "pk": 1, "fields": {"test_input": "1", "test_output": "1", "test_score": 1, "hidden": true, "question": 1}}, {"model": "pratice.testcase", "pk": 2, "fields": {"test_input": "2", "test_output": "1 1", "test_score": 1, "hidden": false, "question": 1}}, {"model": "pratice.testcase", "pk": 3, "fields": {"test_input": "3", "test_output": "1 1 2", "test_score": 1, "hidden": false, "question": 1}}, {"model": "pratice.testcase", "pk": 4, "fields": {"test_input": "4", "test_output": "1 1 2 3", "test_score": 1, "hidden": false, "question": 1}}, {"model": "pratice.testcase", "pk": 5, "fields": {"test_input": "5", "test_output": "1 1 2 3 5", "test_score": 1, "hidden": false, "question": 1}}, {"model": "pratice.testcase", "pk": 6, "fields": {"test_input": "6", "test_output": "1 1 2 3 5 8", "test_score": 1, "hidden": false, "question": 1}}, {"model": "pratice.testcase", "pk": 13, "fields": {"test_input": "3", "test_output": "[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]", "test_score": 1, "hidden": false, "question": 5}}]